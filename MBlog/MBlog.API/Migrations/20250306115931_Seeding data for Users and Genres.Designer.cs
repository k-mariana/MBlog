// <auto-generated />
using System;
using MBlog.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MBlog.API.Migrations
{
    [DbContext(typeof(MBlogDbContext))]
    [Migration("20250306115931_Seeding data for Users and Genres")]
    partial class SeedingdataforUsersandGenres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MBlog.API.Models.Domain.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("UserId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("MBlog.API.Models.Domain.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f5f840e-ebcb-422b-805b-bc908b66269b"),
                            Name = "Travel"
                        },
                        new
                        {
                            Id = new Guid("3e9e946f-e961-4f26-bd16-6ae3c7d8b799"),
                            Name = "Film"
                        },
                        new
                        {
                            Id = new Guid("1543228b-9f94-4b11-b7cd-5b9990bec802"),
                            Name = "Programming"
                        });
                });

            modelBuilder.Entity("MBlog.API.Models.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f832050f-5325-468a-bd97-dc86d64d5495"),
                            FirstName = "Olga",
                            LastName = "Tokar"
                        },
                        new
                        {
                            Id = new Guid("cb37f95d-aee6-48c5-8624-d730c2806c34"),
                            FirstName = "John",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = new Guid("a05d6a71-c602-4a50-8535-552c26daab92"),
                            FirstName = "Andrew",
                            LastName = "Miller"
                        },
                        new
                        {
                            Id = new Guid("3f6f6389-8509-4987-b109-e1b895ad686c"),
                            FirstName = "Alina",
                            LastName = "Fedak"
                        },
                        new
                        {
                            Id = new Guid("38ff1a54-3661-4923-90b2-3283b57b0613"),
                            FirstName = "Anna",
                            LastName = "Boyko"
                        });
                });

            modelBuilder.Entity("MBlog.API.Models.Domain.Article", b =>
                {
                    b.HasOne("MBlog.API.Models.Domain.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MBlog.API.Models.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
